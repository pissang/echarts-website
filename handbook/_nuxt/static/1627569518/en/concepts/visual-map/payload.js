__NUXT_JSONP__("/en/concepts/visual-map", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R){return {data:[{article:{slug:"visual-map",toc:[{id:B,depth:y,text:C},{id:D,depth:y,text:E},{id:F,depth:y,text:G},{id:H,depth:I,text:J},{id:K,depth:I,text:L}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:"visual-map-of-data"},children:[{type:b,tag:d,props:{href:"#visual-map-of-data",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:"Visual Map of Data"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Data visualization is a procedure of mapping data into visual elements. This procedure can also be called visual coding, and visual elements can also be called visual channels."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Every type of charts in Apache ECharts"},{type:b,tag:"sup",props:{},children:[{type:a,value:"TM"}]},{type:a,value:" has this built-in mapping procedure. For example, line chart map data into "},{type:b,tag:s,props:{},children:[{type:a,value:"lines"}]},{type:a,value:", bar chart map data into "},{type:b,tag:s,props:{},children:[{type:a,value:"height"}]},{type:a,value:". Some more complicated charts, like "},{type:b,tag:f,props:{},children:[{type:a,value:"graph"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"themeRiver"}]},{type:a,value:", and "},{type:b,tag:f,props:{},children:[{type:a,value:"treemap"}]},{type:a,value:" have their own built-in mapping."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Besides, ECharts provides "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap component"}]},{type:a,value:" for general visual mapping. Visual elements allowed in "},{type:b,tag:f,props:{},children:[{type:a,value:z}]},{type:a,value:" component are:"}]},{type:a,value:c},{type:b,tag:M,props:{},children:[{type:a,value:c},{type:b,tag:r,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"symbol"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"symbolSize"}]}]},{type:a,value:c},{type:b,tag:r,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"color"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"opacity"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"colorAlpha"}]},{type:a,value:","}]},{type:a,value:c},{type:b,tag:r,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:"colorLightness"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"colorSaturation"}]},{type:a,value:q},{type:b,tag:f,props:{},children:[{type:a,value:"colorHue"}]}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Next, we are going to introduce how to use "},{type:b,tag:f,props:{},children:[{type:a,value:z}]},{type:a,value:" component."}]},{type:a,value:c},{type:b,tag:A,props:{id:B},children:[{type:b,tag:d,props:{href:"#data-and-dimension",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:C}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Data are usually stored in "},{type:b,tag:d,props:{href:N,rel:[g,h,i],target:j},children:[{type:a,value:O}]},{type:a,value:" in ECharts. Depending on chart types, like list, tree, graph, and so on, the form of data may vary somehow. But they have one common feature, that they are a collection of data items. Every data item contains data value, and other information if needed. Every data value can be a single value (one dimension) or an array (multiple dimensions)."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"For example, "},{type:b,tag:d,props:{href:N,rel:[g,h,i],target:j},children:[{type:a,value:O}]},{type:a,value:" is the most common form, which is a "},{type:b,tag:f,props:{},children:[{type:a,value:"list"}]},{type:a,value:", a common array:"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{lang:w,"line-highlights":k,"file-name":k},children:[{type:a,value:"series: {\n  data: [\n    {\n      \u002F\u002F every item here is a dataItem\n      value: 2323, \u002F\u002F this is data value\n      itemStyle: {}\n    },\n    1212, \u002F\u002F it can also be a value of dataItem, which is a more common case\n    2323, \u002F\u002F every data value here is one dimension\n    4343,\n    3434\n  ];\n}\n"}]}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{lang:w,"line-highlights":k,"file-name":k},children:[{type:a,value:"series: {\n  data: [\n    {\n      \u002F\u002F every item here is a dataItem\n      value: [3434, 129, 'San Marino'], \u002F\u002F this is data value\n      itemStyle: {}\n    },\n    [1212, 5454, 'Vatican'], \u002F\u002F it can also be a value of dataItem, which is a more common case\n    [2323, 3223, 'Nauru'], \u002F\u002F every data value here is three dimension\n    [4343, 23, 'Tuvalu'] \u002F\u002F If is scatter chart, usually map the first dimension to x axis,\n    \u002F\u002F the second dimension to y axis,\n    \u002F\u002F and the third dimension to symbolSize\n  ];\n}\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Usually the first one or two dimensions are used for mapping. For example, map the first dimension to x axis, and the second dimension to y axis. If you want to represent more dimensions, "},{type:b,tag:f,props:{},children:[{type:a,value:z}]},{type:a,value:" is what you need. Most likely, "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#series-scatter",rel:[g,h,i],target:j},children:[{type:a,value:"scatter charts"}]},{type:a,value:" use radius to represent the third dimension."}]},{type:a,value:c},{type:b,tag:A,props:{id:D},children:[{type:b,tag:d,props:{href:"#the-visualmap-component",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"visualMap component defines the mapping from "},{type:b,tag:s,props:{},children:[{type:a,value:"which dimension of data"}]},{type:a,value:P},{type:b,tag:s,props:{},children:[{type:a,value:"what visual elements"}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The following two types of visualMap components are supported, identified with "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap.type",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap.type"}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Its structure is defined as:"}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{lang:w,"line-highlights":k,"file-name":k},children:[{type:a,value:"option = {\n  visualMap: [\n    \u002F\u002F can define multiple visualMap components at the same time\n    {\n      \u002F\u002F the first visualMap component\n      type: 'continuous' \u002F\u002F defined as continuous visualMap\n      \u002F\u002F ...\n    },\n    {\n      \u002F\u002F the second visualMap component\n      type: 'piecewise' \u002F\u002F defined as discrete visualMap\n      \u002F\u002F ...\n    }\n  ]\n  \u002F\u002F ...\n};\n"}]}]},{type:a,value:c},{type:b,tag:A,props:{id:F},children:[{type:b,tag:d,props:{href:"#continuous-and-piecewise-visual-mapping-components",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:G}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The visual mapping component of ECharts is divided into continuous ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap-continuous",rel:[g,h,i],target:j},children:[{type:a,value:"visualMapContinuous"}]},{type:a,value:") and piecewise ("},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap-piecewise",rel:[g,h,i],target:j},children:[{type:a,value:"visualMapPiecewise"}]},{type:a,value:")."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Continuous means that the data dimension for visual mapping is a continuous value, while piecewise means that the data is divided into multiple segments or discrete data."}]},{type:a,value:c},{type:b,tag:Q,props:{id:H},children:[{type:b,tag:d,props:{href:"#continuous-visual-mapping",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:J}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Continuous type visual mapping can determine the range of visual mapping by specifying the maximum and minimum values."}]},{type:a,value:c},{type:b,tag:t,props:{className:[u]},children:[{type:b,tag:v,props:{lang:w,"line-highlights":k,"file-name":k},children:[{type:a,value:"option = {\n  visualMap: [\n    {\n      type: 'piecewise',\n      min: 0,\n      max: 5000,\n      dimension: 3, \u002F\u002F the fourth dimension of series.data (i.e. value[3]) is mapped\n      seriesIndex: 4, \u002F\u002F The fourth series is mapped.\n      inRange: {\n        \u002F\u002F The visual configuration in the selected range\n        color: ['blue', '#121122', 'red'], \u002F\u002F A list of colors that defines the graph color mapping\n        \u002F\u002F the minimum value of the data is mapped to 'blue', and\n        \u002F\u002F the maximum value is mapped to 'red', \u002F\u002F the maximum value is mapped to 'red', \u002F\u002F the maximum value is mapped to 'red'.\n        \u002F\u002F The rest is automatically calculated linearly.\n        symbolSize: [30, 100] \u002F\u002F Defines the mapping range for the graphic size.\n        \u002F\u002F The minimum value of the data is mapped to 30, \u002F\u002F and the maximum value is mapped to 100.\n        \u002F\u002F The maximum value is mapped to 100.\n        \u002F\u002F The rest is calculated linearly automatically.\n      },\n      outOfRange: {\n        \u002F\u002F Check the out of range visual configuration\n        symbolSize: [30, 100]\n      }\n    }\n    \u002F\u002F ...\n  ]\n};\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"where "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap.inRange",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap.inRange"}]},{type:a,value:" indicates the style used for data within the data mapping range; while "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap.outOfRange",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap.outOfRange"}]},{type:a,value:" specifies the style for data outside the mapping range."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:d,props:{href:"~visualMap.dimension"},children:[{type:a,value:"visualMap.dimension"}]},{type:a,value:" specifies which dimension of the data will be visually mapped."}]},{type:a,value:c},{type:b,tag:Q,props:{id:K},children:[{type:b,tag:d,props:{href:"#piecewise-visual-mapping",ariaHidden:l,tabIndex:m},children:[{type:b,tag:n,props:{className:[o,p]},children:[]}]},{type:a,value:L}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The piecewise visual mapping component has three modes."}]},{type:a,value:c},{type:b,tag:M,props:{},children:[{type:a,value:c},{type:b,tag:r,props:{},children:[{type:a,value:"Continuous data average segmentation: based on "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap-piecewise.splitNumber",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap-piecewise.splitNumber"}]},{type:a,value:" to automatically split the data into pieces equally."}]},{type:a,value:c},{type:b,tag:r,props:{},children:[{type:a,value:"Continuous data custom segmentation: define the range of each piece based on "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap-piecewise.pieces",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap-piecewise.pieces"}]},{type:a,value:x}]},{type:a,value:c},{type:b,tag:r,props:{},children:[{type:a,value:"Discrete data (categorical data): categories are defined in "},{type:b,tag:d,props:{href:"https:\u002F\u002Fecharts.apache.org\u002Foption.html#visualMap-piecewise.categories",rel:[g,h,i],target:j},children:[{type:a,value:"visualMap-piecewise.categories"}]},{type:a,value:x}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"To use segmented visual map, you need to set "},{type:b,tag:f,props:{},children:[{type:a,value:"type"}]},{type:a,value:P},{type:b,tag:f,props:{},children:[{type:a,value:"'piecewise'"}]},{type:a,value:" and choose one of the above three configuration items."}]}]},dir:"\u002Fen\u002Fconcepts",path:"\u002Fen\u002Fconcepts\u002Fvisual-map",extension:".md",createdAt:R,updatedAt:R},postPath:"en\u002Fconcepts\u002Fvisual-map"}],fetch:{},mutations:[]}}("text","element","\n","a","p","code","nofollow","noopener","noreferrer","_blank","","true",-1,"span","icon","icon-link",", ","li","em","div","nuxt-content-highlight","md-code-block","js",".",2,"visualMap","h2","data-and-dimension","Data and Dimension","the-visualmap-component","The visualMap Component","continuous-and-piecewise-visual-mapping-components","Continuous and Piecewise Visual Mapping Components","continuous-visual-mapping",3,"Continuous Visual Mapping","piecewise-visual-mapping","Piecewise Visual Mapping","ul","https:\u002F\u002Fecharts.apache.org\u002Foption.html#series.data","series.data"," to ","h3","2021-07-29T14:36:51.659Z")));