__NUXT_JSONP__("/zh/concepts/event", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P){return {data:[{article:{slug:"event",toc:[{id:r,depth:s,text:r},{id:t,depth:s,text:t},{id:A,depth:s,text:B},{id:C,depth:s,text:D}],body:{type:"root",children:[{type:b,tag:"h1",props:{id:E},children:[{type:b,tag:k,props:{href:"#%E4%BA%8B%E4%BB%B6%E4%B8%8E%E8%A1%8C%E4%B8%BA",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:E}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在 Apache ECharts 的图表中用户的操作将会触发相应的事件。开发者可以监听这些事件，然后通过回调函数做相应的处理，比如跳转到一个地址，或者弹出对话框，或者做数据下钻等等。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"ECharts 中的事件名称对应 DOM 事件名称，均为小写的字符串，如下是一个绑定点击操作的示例。"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"myChart.on('click', function(params) {\n  \u002F\u002F 控制台打印数据的名称\n  console.log(params.name);\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在 ECharts 中事件分为两种类型，一种是用户鼠标操作点击，或者 hover 图表的图形时触发的事件，还有一种是用户在使用可以交互的组件后触发的行为事件，例如在切换图例开关时触发的 "},{type:b,tag:k,props:{href:F,rel:[u,v,w],target:x},children:[{type:a,value:G}]},{type:a,value:" 事件（这里需要注意切换图例开关是不会触发 "},{type:b,tag:f,props:{},children:[{type:a,value:"'legendselected'"}]},{type:a,value:" 事件的），数据区域缩放时触发的 "},{type:b,tag:k,props:{href:F,rel:[u,v,w],target:x},children:[{type:a,value:"'datazoom'"}]},{type:a,value:" 事件等等。"}]},{type:a,value:c},{type:b,tag:y,props:{id:r},children:[{type:b,tag:k,props:{href:"#%E9%BC%A0%E6%A0%87%E4%BA%8B%E4%BB%B6%E7%9A%84%E5%A4%84%E7%90%86",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:r}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"ECharts 支持常规的鼠标事件类型，包括 "},{type:b,tag:f,props:{},children:[{type:a,value:"'click'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'dblclick'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'mousedown'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'mousemove'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'mouseup'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'mouseover'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'mouseout'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'globalout'"}]},{type:a,value:l},{type:b,tag:f,props:{},children:[{type:a,value:"'contextmenu'"}]},{type:a,value:" 事件。下面先来看一个简单的点击柱状图后打开相应的百度搜索页面的示例。"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:H,props:{lang:j,layout:I},children:[{type:a,value:"\u002F\u002F 基于准备好的dom，初始化ECharts实例\n\u002F\u002F var myChart = echarts.init(document.getElementById('main'));\n\n\u002F\u002F 指定图表的配置项和数据\nvar option = {\n  xAxis: {\n    data: ['衬衫', '羊毛衫', '雪纺衫', '裤子', '高跟鞋', '袜子']\n  },\n  yAxis: {},\n  series: [\n    {\n      name: '销量',\n      type: 'bar',\n      data: [5, 20, 36, 10, 10, 20]\n    }\n  ]\n};\n\u002F\u002F 使用刚指定的配置项和数据显示图表。\nmyChart.setOption(option);\n\u002F\u002F 处理点击事件并且跳转到相应的百度搜索页面\nmyChart.on('click', function(params) {\n  window.open('https:\u002F\u002Fwww.baidu.com\u002Fs?wd=' + encodeURIComponent(params.name));\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"所有的鼠标事件包含参数 "},{type:b,tag:f,props:{},children:[{type:a,value:"params"}]},{type:a,value:"，这是一个包含点击图形的数据信息的对象，如下格式："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:J,"line-highlights":d,"file-name":d},children:[{type:a,value:"type EventParams = {\n  \u002F\u002F 当前点击的图形元素所属的组件名称，\n  \u002F\u002F 其值如 'series'、'markLine'、'markPoint'、'timeLine' 等。\n  componentType: string;\n  \u002F\u002F 系列类型。值可能为：'line'、'bar'、'pie' 等。当 componentType 为 'series' 时有意义。\n  seriesType: string;\n  \u002F\u002F 系列在传入的 option.series 中的 index。当 componentType 为 'series' 时有意义。\n  seriesIndex: number;\n  \u002F\u002F 系列名称。当 componentType 为 'series' 时有意义。\n  seriesName: string;\n  \u002F\u002F 数据名，类目名\n  name: string;\n  \u002F\u002F 数据在传入的 data 数组中的 index\n  dataIndex: number;\n  \u002F\u002F 传入的原始数据项\n  data: Object;\n  \u002F\u002F sankey、graph 等图表同时含有 nodeData 和 edgeData 两种 data，\n  \u002F\u002F dataType 的值会是 'node' 或者 'edge'，表示当前点击在 node 还是 edge 上。\n  \u002F\u002F 其他大部分图表中只有一种 data，dataType 无意义。\n  dataType: string;\n  \u002F\u002F 传入的数据值\n  value: number | Array;\n  \u002F\u002F 数据图形的颜色。当 componentType 为 'series' 时有意义。\n  color: string;\n};\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"如何区分鼠标点击到了哪里："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"myChart.on('click', function(params) {\n  if (params.componentType === 'markPoint') {\n    \u002F\u002F 点击到了 markPoint 上\n    if (params.seriesIndex === 5) {\n      \u002F\u002F 点击到了 index 为 5 的 series 的 markPoint 上。\n    }\n  } else if (params.componentType === 'series') {\n    if (params.seriesType === 'graph') {\n      if (params.dataType === 'edge') {\n        \u002F\u002F 点击到了 graph 的 edge（边）上。\n      } else {\n        \u002F\u002F 点击到了 graph 的 node（节点）上。\n      }\n    }\n  }\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"使用 "},{type:b,tag:f,props:{},children:[{type:a,value:K}]},{type:a,value:" 只对指定的组件的图形元素的触发回调："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.on(eventName, query, handler);\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:b,tag:f,props:{},children:[{type:a,value:K}]},{type:a,value:" 可为 "},{type:b,tag:f,props:{},children:[{type:a,value:L}]},{type:a,value:" 或者 "},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:"。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:N},{type:b,tag:f,props:{},children:[{type:a,value:L}]},{type:a,value:" 表示组件类型。格式可以是 'mainType' 或者 'mainType.subType'。例如："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.on('click', 'series', function() {});\nchart.on('click', 'series.line', function() {});\nchart.on('click', 'dataZoom', function() {});\nchart.on('click', 'xAxis.category', function() {});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:N},{type:b,tag:f,props:{},children:[{type:a,value:M}]},{type:a,value:"，可以包含以下一个或多个属性，每个属性都是可选的："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:J,"line-highlights":d,"file-name":d},children:[{type:a,value:"{\n  ${mainType}Index: number \u002F\u002F 组件 index\n  ${mainType}Name: string \u002F\u002F 组件 name\n  ${mainType}Id: string \u002F\u002F 组件 id\n  dataIndex: number \u002F\u002F 数据项 index\n  name: string \u002F\u002F 数据项 name\n  dataType: string \u002F\u002F 数据项 type，如关系图中的 'node', 'edge'\n  element: string \u002F\u002F 自定义系列中的 el 的 name\n}\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.setOption({\n  \u002F\u002F ...\n  series: [\n    {\n      name: 'uuu'\n      \u002F\u002F ...\n    }\n  ]\n});\nchart.on('mouseover', { seriesName: 'uuu' }, function() {\n  \u002F\u002F series name 为 'uuu' 的系列中的图形元素被 'mouseover' 时，此方法被回调。\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.setOption({\n  \u002F\u002F ...\n  series: [\n    {\n      \u002F\u002F ...\n    },\n    {\n      \u002F\u002F ...\n      data: [\n        { name: 'xx', value: 121 },\n        { name: 'yy', value: 33 }\n      ]\n    }\n  ]\n});\nchart.on('mouseover', { seriesIndex: 1, name: 'xx' }, function() {\n  \u002F\u002F series index 1 的系列中的 name 为 'xx' 的元素被 'mouseover' 时，此方法被回调。\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.setOption({\n  \u002F\u002F ...\n  series: [\n    {\n      type: 'graph',\n      nodes: [\n        { name: 'a', value: 10 },\n        { name: 'b', value: 20 }\n      ],\n      edges: [{ source: 0, target: 1 }]\n    }\n  ]\n});\nchart.on('click', { dataType: 'node' }, function() {\n  \u002F\u002F 关系图的节点被点击时此方法被回调。\n});\nchart.on('click', { dataType: 'edge' }, function() {\n  \u002F\u002F 关系图的边被点击时此方法被回调。\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:z}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"chart.setOption({\n  \u002F\u002F ...\n  series: {\n    \u002F\u002F ...\n    type: 'custom',\n    renderItem: function(params, api) {\n      return {\n        type: 'group',\n        children: [\n          {\n            type: 'circle',\n            name: 'my_el'\n            \u002F\u002F ...\n          },\n          {\n            \u002F\u002F ...\n          }\n        ]\n      };\n    },\n    data: [[12, 33]]\n  }\n});\nchart.on('mouseup', { element: 'my_el' }, function() {\n  \u002F\u002F name 为 'my_el' 的元素被 'mouseup' 时，此方法被回调。\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"你可以在回调函数中获得这个对象中的数据名、系列名称后在自己的数据仓库中索引得到其它的信息后更新图表，显示浮层等等，如下示例代码："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"myChart.on('click', function(parmas) {\n  $.get('detail?q=' + params.name, function(detail) {\n    myChart.setOption({\n      series: [\n        {\n          name: 'pie',\n          \u002F\u002F 通过饼图表现单个柱子中的数据分布\n          data: [detail.data]\n        }\n      ]\n    });\n  });\n});\n"}]}]},{type:a,value:c},{type:b,tag:y,props:{id:t},children:[{type:b,tag:k,props:{href:"#%E7%BB%84%E4%BB%B6%E4%BA%A4%E4%BA%92%E7%9A%84%E8%A1%8C%E4%B8%BA%E4%BA%8B%E4%BB%B6",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:t}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在 ECharts 中基本上所有的组件交互行为都会触发相应的事件，常用的事件和事件对应参数在 "},{type:b,tag:k,props:{href:"https:\u002F\u002Fecharts.apache.org\u002F\u002Fapi.html#events",rel:[u,v,w],target:x},children:[{type:a,value:"events"}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"下面是监听一个图例开关的示例："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"\u002F\u002F 图例开关的行为只会触发 legendselectchanged 事件\nmyChart.on('legendselectchanged', function(params) {\n  \u002F\u002F 获取点击图例的选中状态\n  var isSelected = params.selected[params.name];\n  \u002F\u002F 在控制台中打印\n  console.log((isSelected ? '选中了' : '取消选中了') + '图例' + params.name);\n  \u002F\u002F 打印所有图例的状态\n  console.log(params.selected);\n});\n"}]}]},{type:a,value:c},{type:b,tag:y,props:{id:A},children:[{type:b,tag:k,props:{href:"#%E4%BB%A3%E7%A0%81%E8%A7%A6%E5%8F%91-echarts-%E4%B8%AD%E7%BB%84%E4%BB%B6%E7%9A%84%E8%A1%8C%E4%B8%BA",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:B}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"上面提到诸如 "},{type:b,tag:f,props:{},children:[{type:a,value:G}]},{type:a,value:" 事件会由组件交互的行为触发，那除了用户的交互操作，有时候也会有需要在程序里调用方法触发图表的行为，诸如显示 tooltip，选中图例。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在 ECharts 通过调用 "},{type:b,tag:f,props:{},children:[{type:a,value:"myChart.dispatchAction({ type: '' })"}]},{type:a,value:" 触发图表行为，统一管理了所有动作，也可以方便地根据需要去记录用户的行为路径。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"常用的动作和动作对应参数在 "},{type:b,tag:k,props:{href:"https:\u002F\u002Fecharts.apache.org\u002F\u002Fapi.html#action",rel:[u,v,w],target:x},children:[{type:a,value:"action"}]},{type:a,value:O}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"下面示例演示了如何通过 "},{type:b,tag:f,props:{},children:[{type:a,value:"dispatchAction"}]},{type:a,value:" 去轮流高亮饼图的每个扇形。"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:H,props:{lang:j,layout:I},children:[{type:a,value:"option = {\n  title: {\n    text: '饼图程序调用高亮示例',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'item',\n    formatter: '{a} \u003Cbr\u002F\u003E{b} : {c} ({d}%)'\n  },\n  legend: {\n    orient: 'vertical',\n    left: 'left',\n    data: ['直接访问', '邮件营销', '联盟广告', '视频广告', '搜索引擎']\n  },\n  series: [\n    {\n      name: '访问来源',\n      type: 'pie',\n      radius: '55%',\n      center: ['50%', '60%'],\n      data: [\n        { value: 335, name: '直接访问' },\n        { value: 310, name: '邮件营销' },\n        { value: 234, name: '联盟广告' },\n        { value: 135, name: '视频广告' },\n        { value: 1548, name: '搜索引擎' }\n      ],\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)'\n        }\n      }\n    }\n  ]\n};\n\nlet currentIndex = -1;\n\nsetInterval(function() {\n  var dataLen = option.series[0].data.length;\n  \u002F\u002F 取消之前高亮的图形\n  myChart.dispatchAction({\n    type: 'downplay',\n    seriesIndex: 0,\n    dataIndex: currentIndex\n  });\n  currentIndex = (currentIndex + 1) % dataLen;\n  \u002F\u002F 高亮当前图形\n  myChart.dispatchAction({\n    type: 'highlight',\n    seriesIndex: 0,\n    dataIndex: currentIndex\n  });\n  \u002F\u002F 显示 tooltip\n  myChart.dispatchAction({\n    type: 'showTip',\n    seriesIndex: 0,\n    dataIndex: currentIndex\n  });\n}, 1000);\n"}]}]},{type:a,value:c},{type:b,tag:y,props:{id:C},children:[{type:b,tag:k,props:{href:"#%E7%9B%91%E5%90%AC%E7%A9%BA%E7%99%BD%E5%A4%84%E7%9A%84%E4%BA%8B%E4%BB%B6",ariaHidden:m,tabIndex:n},children:[{type:b,tag:o,props:{className:[p,q]},children:[]}]},{type:a,value:D}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"有时候，开发者需要监听画布的“空白处”所触发的事件。比如，当需要在用户点击“空白处”的时候重置图表时。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"在讨论这个功能之前，我们需要先明确两种事件。zrender 事件和 echarts 事件。"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"myChart.getZr().on('click', function(event) {\n  \u002F\u002F 该监听器正在监听一个`zrender 事件`。\n});\nmyChart.on('click', function(event) {\n  \u002F\u002F 该监听器正在监听一个`echarts 事件`。\n});\n"}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"zrender 事件与 echarts 事件不同。前者是当鼠标在任何地方都会被触发，而后者是只有当鼠标在图形元素上时才能被触发。事实上，echarts 事件是在 zrender 事件的基础上实现的，也就是说，当一个 zrender 事件在图形元素上被触发时，echarts 将触发一个 echarts 事件给开发者。"}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"有了 zrender 事件，我们就可以实现监听空白处的事件，具体如下："}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{lang:j,"line-highlights":d,"file-name":d},children:[{type:a,value:"myChart.getZr().on('click', function(event) {\n  \u002F\u002F 没有 target 意味着鼠标\u002F指针不在任何一个图形元素上，它是从“空白处”触发的。\n  if (!event.target) {\n    \u002F\u002F 点击在了空白处，做些什么。\n  }\n});\n"}]}]}]},dir:"\u002Fzh\u002Fconcepts",path:"\u002Fzh\u002Fconcepts\u002Fevent",extension:".md",createdAt:P,updatedAt:P},postPath:"zh\u002Fconcepts\u002Fevent"}],fetch:{},mutations:[]}}("text","element","\n","","p","code","div","nuxt-content-highlight","md-code-block","js","a","、 ","true",-1,"span","icon","icon-link","鼠标事件的处理",2,"组件交互的行为事件","nofollow","noopener","noreferrer","_blank","h2","例如：","代码触发-echarts-中组件的行为","代码触发 ECharts 中组件的行为","监听空白处的事件","监听“空白处”的事件","事件与行为","https:\u002F\u002Fecharts.apache.org\u002Fapi.html#events.legendselectchanged","'legendselectchanged'","md-live","tb","ts","query","string","Object","如果为 "," 文档中有列出。","2021-07-29T14:36:51.659Z")));